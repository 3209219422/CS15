C#企业级开发技术练习15答题卡

班级：     
姓名：     
学号：     

注：请将答案放置在序号下方。*/

（一）using System;
using System.Threading.Tasks;

namespace ConsoleApp6
{
    class Program
    {
        static Task<decimal> Sale(decimal price, int num)
        {
            var data = (price, num);
            Task<decimal> tk = new Task<decimal>(t =>
            {
                var (p, n) = ((decimal, int))t;
                return p * n;
            }, data);
            tk.Start(); return tk;
        }
        static void Calc(decimal price,int num)
        {
            decimal r = Sale(price, num).Result;
            Console.WriteLine($"单价:{price},数量:{num},商品金额:{r}");
        }
        static void Main(string[] args)
        {
            decimal price = 20.88m;
            int num = 5;
            Calc(price, num);
            Console.WriteLine($"正在计算单价:{price}、数量:{num}的商品金额");
        }
    }
}



（二）using System;
using System.Threading.Tasks;
using System.Threading;

namespace ConsoleApp6
{
    class Program
    {
        static ThreadLocal<(double, int)> runnum = new ThreadLocal<(double, int)>();

        static Task Calc();
        {
        return Task.Run(()=>
            {
                runnum.Value=(0.1,3);
                var a = runnum.Value.Item1;
        Console.writeLine($"{a}的{b}次方式{Math.Pow(a,b)}");
            });
    }
        static void Main(string[] args)
        {
    runnum.Value = (0.2, 4);
    await Calc();
    var a = runnum.value.Iteml;
    var b = runnum.value.Iteml;
}
    }
}



（三）using System;
using System.Reflection;

namespace ConsoleApp6
{
    public class Student
    {
        public string name;
        public static int num;
        public Student() { num++; }
        public DateTime birth { get; set; }
        public int age() { return DateTime.Now.Year - birth.Year; }
        public static int getCount() { return num; }
    }
    class Program
    {
        static void Main(string[] args)
        {
            foreach (MeberInfo meber in typeof(decimal).GetMembers())
            {
                Console.Write($"成员{member.Module}的类型是");
                Console.WriteLine($"{member.MemberType}");
            }
        }
    }
}





